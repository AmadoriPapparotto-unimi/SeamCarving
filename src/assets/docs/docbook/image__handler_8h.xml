<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_image__handler_8h" xml:lang="en-US">
<title>image_handler.h File Reference</title>
<indexterm><primary>image_handler.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_img_prop_struct">ImgPropStruct</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_pixel_struct">PixelStruct</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_energy_pixel_struct">EnergyPixelStruct</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structseam_struct">seamStruct</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_struct_img_prop_struct">ImgPropStruct</link> <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link></para>
</listitem>
            <listitem><para>typedef unsigned char <link linkend="_image__handler_8h_1a5661cb3c75abb43619cf0f82ecf972c2">pel_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_pixel_struct">PixelStruct</link> <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_struct_energy_pixel_struct">EnergyPixelStruct</link> <link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structseam_struct">seamStruct</link> <link linkend="_image__handler_8h_1afa036bc04d925ac554f8714304c2131b">seam_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_image__handler_8h_1a5e2e3b7222b00bb25d5d015165cca7e9">readBMP</link> (FILE *f, <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> *img, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *imgProp)</para>
</listitem>
            <listitem><para>void <link linkend="_image__handler_8h_1a6f5cd91597c669969324094d86a3c82d">setupImgProp</link> (<link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *ip, FILE *f)</para>
</listitem>
            <listitem><para>void <link linkend="_image__handler_8h_1a8a49ee9a31f899e97cca69db5e271047">toGrayScale</link> (<link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> *img, <link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link> *imgGray, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *imgProp)</para>
</listitem>
            <listitem><para>void <link linkend="_image__handler_8h_1a2bd2715f05c3213b13f1a1d666920261">setBMP_header</link> (<link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *imgProp, int fileSize, int width)</para>
</listitem>
            <listitem><para>void <link linkend="_image__handler_8h_1af1a035335d9b3bb3b0cee65f7a546fe3">writeBMP_minimumSeam</link> (char *p, <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> *img, <link linkend="_image__handler_8h_1afa036bc04d925ac554f8714304c2131b">seam_t</link> *minSeam, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *imgProp)</para>
</listitem>
            <listitem><para>void <link linkend="_image__handler_8h_1a962807b061549b46899d4e9af64b7e37">writeBMP_pixel</link> (char *p, <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> *img, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *ip)</para>
</listitem>
            <listitem><para>void <link linkend="_image__handler_8h_1a37b1c45a5573b980f70967cf662e2478">writeBMP_energy</link> (char *p, <link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link> *energyImg, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *ip)</para>
</listitem>
            <listitem><para>void <link linkend="_image__handler_8h_1a1e8f4613f134ad204a0db4f814f697e3">writeBMP_grayscale</link> (<link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link> *imgGray, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> *imgProp)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c"/><section>
    <title>energyPixel_t</title>
<indexterm><primary>energyPixel_t</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>energyPixel_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_energy_pixel_struct">EnergyPixelStruct</link> <link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link></computeroutput></para></section>
<anchor xml:id="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715"/><section>
    <title>imgProp_t</title>
<indexterm><primary>imgProp_t</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>imgProp_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_img_prop_struct">ImgPropStruct</link> <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link></computeroutput></para></section>
<anchor xml:id="_image__handler_8h_1a5661cb3c75abb43619cf0f82ecf972c2"/><section>
    <title>pel_t</title>
<indexterm><primary>pel_t</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>pel_t</secondary></indexterm>
<para><computeroutput>typedef unsigned char <link linkend="_image__handler_8h_1a5661cb3c75abb43619cf0f82ecf972c2">pel_t</link></computeroutput></para></section>
<anchor xml:id="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4"/><section>
    <title>pixel_t</title>
<indexterm><primary>pixel_t</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>pixel_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_struct_pixel_struct">PixelStruct</link> <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link></computeroutput></para></section>
<anchor xml:id="_image__handler_8h_1afa036bc04d925ac554f8714304c2131b"/><section>
    <title>seam_t</title>
<indexterm><primary>seam_t</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>seam_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structseam_struct">seamStruct</link> <link linkend="_image__handler_8h_1afa036bc04d925ac554f8714304c2131b">seam_t</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_image__handler_8h_1a5e2e3b7222b00bb25d5d015165cca7e9"/><section>
    <title>readBMP()</title>
<indexterm><primary>readBMP</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>readBMP</secondary></indexterm>
<para><computeroutput>void readBMP (FILE * f, <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> * img, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * imgProp)</computeroutput></para>
<para>Legge un file BMP tenendo conto e conseguentemente scartando il padding all&apos;interno di esso. Il formato BMP prevede l&apos;inserimento di N byte a fine riga in modo tale che ogni indirizzo di inizio riga sia allineato mod 4 byte. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>f</entry><entry>
<para>File BMP</para>
</entry>
                            </row>
                            <row>
<entry>img</entry><entry>
<para>Immagine</para>
</entry>
                            </row>
                            <row>
<entry>imgProp</entry><entry>
<para>Proprieta&apos; dell&apos;immagine</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_image__handler_8h_1a2bd2715f05c3213b13f1a1d666920261"/><section>
    <title>setBMP_header()</title>
<indexterm><primary>setBMP_header</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>setBMP_header</secondary></indexterm>
<para><computeroutput>void setBMP_header (<link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * imgProp, int fileSize, int width)</computeroutput></para>
<para>Setup dell&apos;header di un file BMP per i seguenti parametri:<itemizedlist>
<listitem>
<para>dimensione totale del file</para>
</listitem><listitem>
<para>altezza (in pixel) dell&apos;immagine </para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>imgProp</entry><entry>
<para>Proprieta&apos; dell&apos;immagine</para>
</entry>
                            </row>
                            <row>
<entry>fileSize</entry><entry>
<para>Dimensione (in byte) del file</para>
</entry>
                            </row>
                            <row>
<entry>width</entry><entry>
<para>Larghezza dell&apos;immagine </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_image__handler_8h_1a6f5cd91597c669969324094d86a3c82d"/><section>
    <title>setupImgProp()</title>
<indexterm><primary>setupImgProp</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>setupImgProp</secondary></indexterm>
<para><computeroutput>void setupImgProp (<link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * ip, FILE * f)</computeroutput></para>
<para>Funzione host che permette di estrapolare le proprietà dell&apos;immagine di input mediante la lettura del suo header </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>imgProp</entry><entry>
<para>Output</para>
</entry>
                            </row>
                            <row>
<entry>f</entry><entry>
<para>File dell&apos;immagine di input</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_image__handler_8h_1a8a49ee9a31f899e97cca69db5e271047"/><section>
    <title>toGrayScale()</title>
<indexterm><primary>toGrayScale</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>toGrayScale</secondary></indexterm>
<para><computeroutput>void toGrayScale (<link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> * img, <link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link> * imgGray, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * imgProp)</computeroutput></para>
<para>Funzione host che richiama il kernel GPU per la colorazione in scala di grigi </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>img</entry><entry>
<para>Immagine (input)</para>
</entry>
                            </row>
                            <row>
<entry>imgGray</entry><entry>
<para>Immagine in scala di grigi (output)</para>
</entry>
                            </row>
                            <row>
<entry>imgProp</entry><entry>
<para>Proprieta&apos; dell&apos;immagine</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_image__handler_8h_1a37b1c45a5573b980f70967cf662e2478"/><section>
    <title>writeBMP_energy()</title>
<indexterm><primary>writeBMP_energy</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>writeBMP_energy</secondary></indexterm>
<para><computeroutput>void writeBMP_energy (char * p, <link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link> * energyImg, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * ip)</computeroutput></para>
<para>Scrittura di un file BMP a partire da una immagine di tipo energyPixel_t. Funzione non utilizzata dall&apos;algoritmo, ma necessaria ad ottenere le stampe intermedie </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>p</entry><entry>
<para>Path del file</para>
</entry>
                            </row>
                            <row>
<entry>energyImg</entry><entry>
<para>Immagine energyPixel_t da scrivere</para>
</entry>
                            </row>
                            <row>
<entry>imgProp</entry><entry>
<para>Prorpieta&apos; dell&apos;immagine</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_image__handler_8h_1a1e8f4613f134ad204a0db4f814f697e3"/><section>
    <title>writeBMP_grayscale()</title>
<indexterm><primary>writeBMP_grayscale</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>writeBMP_grayscale</secondary></indexterm>
<para><computeroutput>void writeBMP_grayscale (<link linkend="_image__handler_8h_1a6239917a28b62ca5e3c3cd981f41944c">energyPixel_t</link> * imgGray, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * imgProp)</computeroutput></para>
<para>Scrittura di un file BMP a partire da una immagine di tipo energyPixel_t (raffigurante l&apos;immagine in scala di grigi). Funzione non utilizzata dall&apos;algoritmo, ma necessaria ad ottenere le stampe intermedie </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>imgGray</entry><entry>
<para>Immagine in scala di grigi</para>
</entry>
                            </row>
                            <row>
<entry>imgProp</entry><entry>
<para>Proprieta&apos; dell&apos;immagine</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_image__handler_8h_1af1a035335d9b3bb3b0cee65f7a546fe3"/><section>
    <title>writeBMP_minimumSeam()</title>
<indexterm><primary>writeBMP_minimumSeam</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>writeBMP_minimumSeam</secondary></indexterm>
<para><computeroutput>void writeBMP_minimumSeam (char * p, <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> * img, <link linkend="_image__handler_8h_1afa036bc04d925ac554f8714304c2131b">seam_t</link> * minSeam, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * imgProp)</computeroutput></para>
<para>Scrittura di un file BMP con colorazione del minSeam. Funzione non utilizzata dall&apos;algoritmo, ma necessaria ad ottenere le stampe intermedie </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>p</entry><entry></entry>
                            </row>
                            <row>
<entry>img</entry><entry></entry>
                            </row>
                            <row>
<entry>minSeam</entry><entry></entry>
                            </row>
                            <row>
<entry>imgProp</entry><entry></entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_image__handler_8h_1a962807b061549b46899d4e9af64b7e37"/><section>
    <title>writeBMP_pixel()</title>
<indexterm><primary>writeBMP_pixel</primary><secondary>image_handler.h</secondary></indexterm>
<indexterm><primary>image_handler.h</primary><secondary>writeBMP_pixel</secondary></indexterm>
<para><computeroutput>void writeBMP_pixel (char * p, <link linkend="_image__handler_8h_1a2ecda34a1bdbf33933e5e61b64cb3fa4">pixel_t</link> * img, <link linkend="_image__handler_8h_1a3173789b5a5a8673b3025bd014732715">imgProp_t</link> * ip)</computeroutput></para>
<para>Scrittura di un file BMP, che tiene conto del numero di byte padding da aggiungere. </para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>p</entry><entry>
<para>Path del file</para>
</entry>
                            </row>
                            <row>
<entry>img</entry><entry>
<para>Immagine da scrivere</para>
</entry>
                            </row>
                            <row>
<entry>ip</entry><entry>
<para>Proprieta&apos; dell&apos;immagine</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
